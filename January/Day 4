1930. Unique Length-3 Palindromic Subsequences

Given a string s, return the number of unique palindromes of length three that are a subsequence of s.
Note that even if there are multiple ways to obtain the same subsequence, it is still only counted once.
A palindrome is a string that reads the same forwards and backwards.
A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.

For example, "ace" is a subsequence of "abcde".
 

Example 1:

Input: s = "aabca"
Output: 3
Explanation: The 3 palindromic subsequences of length 3 are:
- "aba" (subsequence of "aabca")
- "aaa" (subsequence of "aabca")
- "aca" (subsequence of "aabca")


TC :- O(n)
SC:- O(1)

class Solution {
    public int countPalindromicSubsequence(String s) {
        
        int n = s.length();
        HashSet<Character> uniqueLetters = new HashSet<>();
        int count=0 ;

        for(char ch: s.toCharArray())
            uniqueLetters.add(ch);

        for(char letter: uniqueLetters )
        {
            int firstIdx = -1;
            int lastIdx = -1;

            for(int i=0 ; i<n ;i++)
            {
                if(s.charAt(i) == letter)
                {
                    if(firstIdx == -1)
                    {
                        firstIdx = i;
                    }
                    lastIdx = i;
                }
            }

            HashSet<Character> result = new HashSet<>();

            for(int middle= firstIdx+1; middle < lastIdx ; middle++)
            {
                result.add(s.charAt(middle));
            }

            count += result.size();
        }

        return count ;

    }
}
