2381. Shifting Letters II

You are given a string s of lowercase English letters and a 2D integer array shifts where shifts[i] = [starti, endi, directioni]. For every i, shift the characters in s from the index starti to the index endi (inclusive) forward if directioni = 1, or shift the characters backward if directioni = 0.
Shifting a character forward means replacing it with the next letter in the alphabet (wrapping around so that 'z' becomes 'a'). Similarly, shifting a character backward means replacing it with the previous letter in the alphabet (wrapping around so that 'a' becomes 'z').
Return the final string after all such shifts to s are applied.

Example 1:

Input: s = "abc", shifts = [[0,1,0],[1,2,1],[0,2,1]]
Output: "ace"
Explanation: Firstly, shift the characters from index 0 to index 1 backward. Now s = "zac".
Secondly, shift the characters from index 1 to index 2 forward. Now s = "zbd".
Finally, shift the characters from index 0 to index 2 forward. Now s = "ace".

//T.C : O(m+n), m = length of queries, n = length of array

//S.C : O(n)

class Solution {
    public String shiftingLetters(String s, int[][] shifts) {
        
        int n = s.length();
        int diff[] = new int[n];
        String result="";

        //find the difference array
        for(int[] shift : shifts)
        {
            int L = shift[0];
            int R = shift[1];
            int move = shift[2];

            int x ;
            if(move == 1) //forward
                x = 1;
            else          //backward
                x = -1;

            diff[L] +=  x ;
            if(R+1 < n)
            {
                diff[R+1] -= x ;
            }
        }

        //find cummulative sum
        for(int i=1 ;i<n ;i++)
        {
            diff[i] = diff[i-1] + diff[i];
        }

        //find the shift
        for(int i=0 ; i<n ; i++)
        {
            int shift = diff[i];
            shift = shift % 26 ;

            if(shift < 0)
                shift += 26;

            char ch = (char)((( (s.charAt(i) - 'a') + shift ) % 26) + 'a') ;
            result = result + ch ;
        }
        
        return result ;
    }
}
