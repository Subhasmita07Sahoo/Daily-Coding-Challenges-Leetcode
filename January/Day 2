2559. Count Vowel Strings in Ranges

You are given a 0-indexed array of strings words and a 2D array of integers queries.
Each query queries[i] = [li, ri] asks us to find the number of strings present in the range li to ri (both inclusive) of words that start and end with a vowel.
Return an array ans of size queries.length, where ans[i] is the answer to the ith query.
Note that the vowel letters are 'a', 'e', 'i', 'o', and 'u'.

Example 1:

Input: words = ["aba","bcb","ece","aa","e"], queries = [[0,2],[1,4],[1,1]]
Output: [2,3,0]
Explanation: The strings starting and ending with a vowel are "aba", "ece", "aa" and "e".
The answer to the query [0,2] is 2 (strings "aba" and "ece").
to query [1,4] is 3 (strings "ece", "aa", "e").
to query [1,1] is 0.
We return [2,3,0].

**************************************************************************************************JAVA**************************************************************************************************************************
TC:- O(n+m)
SC:- O(n+m)

class Solution {
    public int[] vowelStrings(String[] words, int[][] queries) {

        int n = words.length;
        int m = queries.length;
        int vowelCount[] = new int[n];
        int result[]=new int[m];
        int sum=0;

        for(int i=0;i<n;i++)
        {
            if(isVowel(words[i].charAt(0)) && 
            isVowel(words[i].charAt(words[i].length()-1 )))
            {
                    sum++;
            }
            vowelCount[i] = sum ;
        }

        for(int i=0 ;i<m ;i++)
        {
            int l = queries[i][0];
            int r = queries[i][1];

            result[i] = vowelCount[r] - ((l>0)?vowelCount[l-1] : 0); 
        }
        return result;
    }

    private static boolean isVowel(char ch)
    {
        if(ch == 'a' ||ch=='e' || ch=='i' || ch== 'o' || ch=='u')
            return true;
        return false;
    }
}
