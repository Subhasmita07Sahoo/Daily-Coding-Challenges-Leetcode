2965. Find Missing and Repeated Values

You are given a 0-indexed 2D integer matrix grid of size n * n with values in the range [1, n2]. Each integer appears exactly once except a which appears twice and b which is missing. The task is to find the repeating and missing numbers a and b.

Return a 0-indexed integer array ans of size 2 where ans[0] equals to a and ans[1] equals to b.


Example 1:

Input: grid = [[1,3],[2,2]]
Output: [2,4]
Explanation: Number 2 is repeated and number 4 is missing so the answer is [2,4].


class Solution {
    public int[] findMissingAndRepeatedValues(int[][] grid) {
        int n = grid.length;

        long N = (long) n * n;

        long gridSum = 0;

        long gridSqSum = 0;

        for (int i = 0; i < n; i++) {

            for (int j = 0; j < n; j++) {

                gridSum += grid[i][j];

                gridSqSum += (long) grid[i][j] * grid[i][j];

            }

        }

        long sum = (N * (N + 1)) / 2; // Expected sum of N natural numbers

        long sqSum = (N * (N + 1) * (2 * N + 1)) / 6; // Expected sq sum of natural numbers

        long sqDiff = gridSqSum - sqSum;

        long sumDiff = gridSum - sum;

        int a = (int) ((sqDiff / sumDiff + sumDiff) / 2);

        int b = (int) ((sqDiff / sumDiff - sumDiff) / 2);

        return new int[]{a, b};
    }
}
